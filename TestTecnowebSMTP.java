import java.net.Socket;
import java.net.SocketTimeoutException;

/**
 * Test simple de conectividad SMTP a tecnoweb
 */
public class TestTecnowebSMTP {
    
    private static final String HOST = "mail.tecnoweb.org.bo";
    private static final int[] PUERTOS = {25, 587, 2525, 465};
    
    public static void main(String[] args) {
        System.out.println("üß™ TEST DE CONECTIVIDAD SMTP TECNOWEB");
        System.out.println("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
        System.out.println("üåê Host: " + HOST);
        
        for (int puerto : PUERTOS) {
            testPort(HOST, puerto);
        }
        
        System.out.println("\nüí° RECOMENDACIONES:");
        System.out.println("   ‚úÖ Usar el puerto que responda m√°s r√°pido");
        System.out.println("   üìß Puerto 25: SMTP est√°ndar");
        System.out.println("   üìß Puerto 587: SMTP submission (m√°s com√∫n)");
        System.out.println("   üìß Puerto 2525: SMTP alternativo");
        System.out.println("   üìß Puerto 465: SMTPS (SSL)");
    }
    
    private static void testPort(String host, int port) {
        System.out.print("\nüîç Probando puerto " + port + "... ");
        
        try (Socket socket = new Socket()) {
            long startTime = System.currentTimeMillis();
            socket.connect(new java.net.InetSocketAddress(host, port), 10000);
            long endTime = System.currentTimeMillis();
            
            System.out.println("‚úÖ CONECTADO (" + (endTime - startTime) + "ms)");
            
            if (port == 25) {
                System.out.println("   üìß Puerto SMTP est√°ndar - Sin cifrado");
            } else if (port == 587) {
                System.out.println("   üìß Puerto SMTP submission - M√°s compatible");
            } else if (port == 2525) {
                System.out.println("   üìß Puerto SMTP alternativo");
            } else if (port == 465) {
                System.out.println("   üìß Puerto SMTPS - Requiere SSL");
            }
            
        } catch (SocketTimeoutException e) {
            System.out.println("‚ùå TIMEOUT (>10s)");
        } catch (Exception e) {
            System.out.println("‚ùå ERROR: " + e.getMessage());
        }
    }
} 